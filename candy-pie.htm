<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <title>opayra - candy pie - babylon</title>

    <script src="https://cdn.babylonjs.com/babylon.js"></script>
    <script src="./assets/candy-pie-babylon.js"></script>

    <style>
      :root {
        --main-color: steelblue;
        --opposite-color: white;
      }

      .candy-pie {
        margin-top: 20px;
        margin-left: 15%;
        margin-right: 15%;
        width: 70%;
        padding: 20px;
        border: 1px var(--main-color) solid;
        color: var(--main-color);
      }

      .candy-pie-title {
        font-weight: bold;
        font-size: large;
        margin-top: 20px;
        margin-bottom: 20px;
      }

      .candy-pie-babylon-canvas {
        touch-action: none;
        width: 100%;
        outline: none; /* remove outline when clicking on canvas */
        margin-top: 10px;
      }
      
    </style>

  </head>

  <body>
    <div class='candy-pie'>
      <h2>candy pie: a 3d pie chart</h2>
      <p style="margin-left: 10px;"><i>based upon <a href='https://www.babylonjs.com/'>Babylon.js</a></i></p>

      <p style="margin-left: 10px;">Part of the candy charts family.</p>
      <p>Define a canvas element in your html, and call one single javascript function to place the 3d pie chart on that canvas element. 
        All data and configuration options are defined in one record parameter.</p>

      <div class='candy-pie-title'>default candy pie (without extra configuration)</div>

      <p>A pie chart with 3 equal slices. Each slice is specified by
        <ul>
          <li>a value, which maps to the relative height of each slice
          <li>a color, which can be specified in several formats (see later)
        </ul>
      </p>
      <p>All other options are defaulted, except the id of the canvas where one wants the 3d pie chart to show up.</p>

      <div>
        <canvas id='candy-pie-babylon-canvas-id-default' class='candy-pie-babylon-canvas'></canvas>

        <script>
          let pie3d_default = {
            'htmlCanvasId': 'candy-pie-babylon-canvas-id-default',
            'slices': [
              { 'value': 100, 'color': 'indianred'},
              { 'value': 100, 'color': 'steelblue'},
              { 'value': 100, 'color': 'olive'}
            ]
          };
          
          candy_pie_babylon( pie3d_default);
        </script>

        <pre style="margin-top: 20px;">
          
          let pie3d_default = {
            'htmlCanvasId': 'candy-pie-babylon-canvas-id-default',
            'slices': [
              { 'value': 100, 'color': 'indianred'},
              { 'value': 100, 'color': 'steelblue'},
              { 'value': 100, 'color': 'olive'}
            ]
          };
          
          // call the 3d pie function with the above settings
          candy_pie_babylon( pie3d_default);

        </pre>

      </div>
      

      <div id='title1' class='candy-pie-title'>candy pie with variable height and arc</div>

      <p>A pie chart with 5 slices, variable height and a variable arc (slice 4 is smaller, applepie is larger than the others).</p>
      <p>The portion of the arc of a slice is set via a percentage. In case the total matches 100%, all slices will make a full pie.</p>
      <p>The background color is taken from the title above.</p>

      <div>
        <canvas id='candy-pie-babylon-canvas-id' class='candy-pie-babylon-canvas' style="aspect-ratio: 16/9"></canvas>

        <script>
          let pie3d = {
            'htmlCanvasId': 'candy-pie-babylon-canvas-id',
            'slices': [
              { 'value': 140, 'arcPct': 1/5 * 100, 'color': 'indianred', 'label': 'one'},
              { 'value': 120, 'arcPct': 1/5 * 100, 'color': 'steelblue', 'label': 'two'},
              { 'value': 100, 'arcPct': 1/5 * 100, 'color': 'olive',     'label': 'three'},
              { 'value':  60, 'arcPct': 1/10 * 100, 'color': 'aliceblue', 'label': 'four'},
              { 'value': 100, 'arcPct': 3/10 * 100, 'color': '#F5DEB3',   'label': 'apples'} // color: wheat
            ],
            'spaceBetweenSlices': true,
            'innerRadiusPct': 40, // use 0 to get rid of the donut hole
            'showLabel': true,
            'showValue': false,
            'backgroundColor': window.getComputedStyle( document.getElementById( 'title1')).color,
            'clickScalePct': 20,
            'verticalFactor': 1.6 // increment this number in case you want higher vertical slices
          };
          
          candy_pie_babylon( pie3d);
        </script>

      </div>
      
      <div class='candy-pie-title'>candy pie with vertically stretched slices</div>
        <p>This pie chart has also 5 slices, all with same width (arc), but the slices are made higher than in the previous pie chart. 
          This is done via the <i>verticalFactor</i> configuration option.</p>

      <div>
        <canvas id='candy-pie-babylon-canvas-id2' class='candy-pie-babylon-canvas' style="width:400px; aspect-ratio: 1/1"></canvas>

        <script>
          let pie3d2 = {
            'htmlCanvasId': 'candy-pie-babylon-canvas-id2',
            'slices': [
              { 'value': 100, 'arcPct': 1/5 * 100, 'color': 'indianred', 'label': 'one'},
              { 'value':  80, 'arcPct': 1/5 * 100, 'color': 'steelblue', 'label': 'two'},
              { 'value': 120, 'arcPct': 1/5 * 100, 'color': 'olive',     'label': 'three'},
              { 'value':  80, 'arcPct': 1/5 * 100, 'color': 'aliceblue', 'label': 'four'},
              { 'value': 120, 'arcPct': 1/5 * 100, 'color': '#F5DEB3',   'label': 'apples'} // color: wheat
            ],
            'spaceBetweenSlices': true,
            'innerRadiusPct': 40, // use 0 to get rid of the donut hole
            'showValue': true,
            'showLabel': true,
            'labelFontFactor': 1.5,
            'backgroundColor': 'rgb(155, 102, 102)',
            'clickScalePct': 20,
            'verticalFactor': 4
          };
          
          candy_pie_babylon( pie3d2);
        </script>

      </div>
      
      <div class='candy-pie-title'>holiday pie chart</div>
        <p>This pie chart has 4 equal slices. Some label-configuration options are used to position & color the labels on the pie.</p>
      <div>
        <canvas id='candy-pie-babylon-canvas-id3' class='candy-pie-babylon-canvas' style="width:50%; margin-left: 25%; aspect-ratio: 4/3"></canvas>

        <script>
          candy_pie_babylon( {
            'htmlCanvasId': 'candy-pie-babylon-canvas-id3',
            'slices': [
              { 'value': 1, 'color': 'lightblue', 'label': 'swimming'},
              { 'value': 1, 'color': '#f8f6e1',   'label': 'ice cream'},
              { 'value': 1, 'color': 'lightblue', 'label': 'cocktails'},
              { 'value': 1, 'color': '#f8f6e1',   'label': 'relaxing'}
            ],
            'spaceBetweenSlices': true,
            'innerRadiusPct': 25, // use 0 to get rid of the donut hole
            'showLabel': true,
            'labelFontFactor': 2.5,
            'labelExtraTopMargin': 20,
            'labelColor': 'rgb(155, 102, 102)',
            'backgroundColor': 'rgba(196,238,216,255)', // green-ish
            'clickScalePct': 0,
            'verticalFactor': 2,
            'allowVerticalRotation' : false,
            'cameraDegreesY': 60
          });
        </script>

        <pre style="width:50%; margin-left: 20%;">

          'labelFontFactor': 2.5,
          'labelExtraTopMargin': 20,
          'labelColor': 'rgb(155, 102, 102)',
          'backgroundColor': 'rgba(196,238,216,255)', // green-ish
          'clickScalePct': 0,
          'verticalFactor': 2,
          'allowVerticalRotation' : false,
          'cameraDegreesY': 60

        </pre>

      </div>

    </div>

    <p>
      <ul>
        <li>
      </ul>
    </p>
    
</body>
</html>

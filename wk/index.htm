<!doctype html>
  <html lang=en>
  <head>
    <meta charset=utf-8>
    <title>opayra lab - wk svg</title>

    <style>
      #tooltip {
        background: cornsilk;
        border: 1px solid black;
        border-radius: 5px;
        padding: 5px;
      }

      #tooltip table {
        border-collapse: collapse;
        margin: 25px 0;
        font-size: 0.9em;
        font-family: sans-serif;
        min-width: 400px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
      }

      #tooltip table thead tr {
        background-color: #009879;
        color: #ffffff;
        text-align: left;
      }

      #tooltip table th, #tooltip table td {
        padding: 12px 15px;
      }

      #tooltip table tbody tr {
        border-bottom: 1px solid #dddddd;
      }

      #tooltip table tbody tr:nth-of-type(even) {
        background-color: #f3f3f3;
      }

      #tooltip table tbody tr:last-of-type {
        border-bottom: 2px solid #009879;
      }

    </style>
  </head>
  
  <body>
    <div id="tooltip" display="none" style="position: absolute; display: none;">
      <table id="tooltip-table">
        <thead>
          <tr>
            <th>team</th>
            <th>points</th>
            <th>games</th>
          </tr>
        </thead>
        <tbody id="tooltip-tbody"></tbody>
      </table>
    </div>

    <br><br>
    <svg
      id="wk"
      version="1.1"
      baseProfile="full">

      <defs id="wk-defs"></defs>

      <rect width="100%" height="100%" id="wk-bg" fill="lightgrey"/>
      <g id="id-games"></g>
    </svg>
    
    <br><br><br>
    <a href="https://stackoverflow.com/questions/29442833/svg-image-inside-circle">stack overflow: image inside circle</a>
    <br>
    <a href="https://github.com/lafeber/world-flags-sprite">32x+++ sprite of all country flags.</a>
    <br>
    <a href="https://www.fifa.com/fifaplus/en/articles/qatar-2022-all-qualified-teams-groups-dates-match-schedule-tickets-more">fifa info</a>
    <br>
    <a href="https://stackoverflow.com/questions/44531794/how-to-show-a-tooltip-after-clicking-an-svg">so: add tooltip</a>

    <script>
      const gPoules = 8,
            gTeamsInPoule = 4,
            svgns = "http://www.w3.org/2000/svg",  // sets the namespace
            bgColor = 'lightgrey',
            size = 1000;

      const teams = [ 
        { name: 'Quatar', offset: 6080, shortName: "qa", poule: 1}, 
        { name: 'Ecuador', offset: 2496, shortName: "eq", poule: 1}, 
        { name: 'Senegal', offset: 6592, shortName: "sn", poule: 1, games: 1, points: 3}, 
        { name: 'Netherlands', offset: 5504, shortName: "nl", poule: 1}, 
        { name: 'England', offset: 224, shortName: "england", poule: 2}, 
        { name: 'Iran', offset: 3776, shortName: "ir", poule: 2}, 
        { name: 'USA', offset: 7328, shortName: "us", poule: 2}, 
        { name: 'Wales', offset: 672, shortName: "wales", poule: 2}, 
        { name: 'Argentina', offset: 992, shortName: "ar", poule: 3}, 
        { name: 'Saudi Arabia', offset: 6272, shortName: "sa", poule: 3}, 
        { name: 'Mexico', offset: 5248, shortName: "mx", poule: 3}, 
        { name: 'Poland', offset: 5888, shortName: "pl", poule: 3}, 
        { name: 'France', offset: 2848, shortName: "fr", poule: 4}, 
        { name: 'Australia', offset: 1088, shortName: "au", poule: 4}, 
        { name: 'Denmark', offset: 2368, shortName: "dk", poule: 4}, 
        { name: 'Tunisia', offset: 7040, shortName: "tn", poule: 4}, 
        { name: 'Spain', offset: 2656, shortName: "es", poule: 5}, 
        { name: 'Costa Rica', offset: 2144, shortName: "cr", poule: 5}, 
        { name: 'Germany', offset: 2304, shortName: "de", poule: 5}, 
        { name: 'Japan', offset: 3968, shortName: "jp", poule: 5}, 
        { name: 'Belgium', offset: 1312, shortName: "be", poule: 6}, 
        { name: 'Canada', offset: 1792, shortName: "ca", poule: 6},
        { name: 'Morocco', offset: 4704, shortName: "ma", poule: 6},
        { name: 'Croatia', offset: 3488, shortName: "hr", poule: 6},
        { name: 'Brazil', offset: 1600, shortName: "br", poule: 7}, 
        { name: 'Serbia', offset: 6176, shortName: "srb", poule: 7}, 
        { name: 'Switzerland', offset: 1920, shortName: "ch", poule: 7}, 
        { name: 'Cameroon', offset: 2048, shortName: "cm", poule: 7}, 
        { name: 'Portugal', offset: 5984, shortName: "pt", poule: 8}, 
        { name: 'Ghana', offset: 3040, shortName: "gh", poule: 8}, 
        { name: 'Uruguay', offset: 7360, shortName: "uy", poule: 8}, 
        { name: 'South Korea', offset: 4224, shortName: "kr", poule: 8}
      ];

      const center = size / 2;
      
      const svg = document.getElementById("wk");

      svg.setAttribute( "width", size);
      svg.setAttribute( "height", size);
      svg.setAttribute( "xmlns", svgns);
      
      document.getElementById("wk-bg").setAttribute( "fill", bgColor);

      function randomIntFromInterval(min, max) { // min and max included 
        return Math.floor(Math.random() * (max - min + 1) + min)
      }

      function showTooltip(evt, pouleNr) {
        let tooltip = document.getElementById("tooltip");

        let rows = document.querySelectorAll("#tooltip tbody tr");
        console.log(pouleNr, rows);
        for ( var i=0 ; i < rows.length ; i++) {
          
          if ( teams[i].poule == pouleNr) {
            rows[i].style.display = "";
          }
          else {
            rows[i].style.display = "none";
          }
        }

        tooltip.style.display = "block";

        let deltaX = 0;
        if (pouleNr < 3 || pouleNr > 6 ) {
          deltaX = 400;
        }

        let deltaY = 0;
        if (pouleNr < 5 ) {
          deltaY = 200;
        }

        tooltip.style.left = evt.pageX + ( 10 - deltaX) + 'px';
        tooltip.style.top = evt.pageY + ( 10 - deltaY) + 'px';
      }

      function hideTooltip() {
        var tooltip = document.getElementById("tooltip");
        tooltip.style.display = "none";
      }

      function createGroupUnder( parentId, id) {
        let parent = document.getElementById(parentId),
            group = document.createElementNS( svgns, "g");
        
        group.setAttribute( "id", id);
        parent.appendChild(group);

        return group;
      }

      function drawTeam(p) {
        
        let circle = document.createElementNS( svgns, "circle");

        circle.setAttribute( "cx", p.cx);
        circle.setAttribute( "cy", p.cy);
        circle.setAttribute( "r", p.r || 20);
        circle.setAttribute( "fill", p.col || "#5cceee");
        circle.setAttribute( "id", p.parent.id);

        if ( 'offset' in ( teams[p.teamNr] || {}) ) {
          let idImage = "url(#flag-" + teams[p.teamNr].shortName + ")";
          circle.setAttribute( "fill", idImage);
          circle.setAttribute( "stroke", "grey");
          circle.setAttribute( "stroke-width", "0.2%");
          
          circle.setAttribute( "transform", "rotate(" + randomIntFromInterval(-15, 15) + "," + p.cx + ',' + p.cy + ")");

          circle.setAttribute( "id", circle.getAttribute("id") + '-' + teams[p.teamNr].shortName);
        }

        if (p.idSuffix) {
          circle.setAttribute( "id", circle.getAttribute("id") + '-' + p.idSuffix);
        }

        p.parent.appendChild(circle);

        // tooltip on mobile: https://stackoverflow.com/questions/46384057/how-to-display-a-tooltip-div-when-an-svg-element-is-hovered

      }

      function drawRound (games, r, color, labelPrefix, teamRadius, startingAngle) {

        console.log( 'round for ' + games + ' game(s).', 'r', r, 'teamRadius', teamRadius, 'color', color);

        let groupRound = createGroupUnder( "id-games", "round-" + games);

        // for each game
        for ( let i = 0; i < games; i++) {
          let a = ( Math.PI * 2 / games * i ) + ( startingAngle || 0 ),
              gameCenterX = center + (r * Math.cos(a)),
              gameCenterY = center + (r * Math.sin(a));

          let groupRoundMatch = createGroupUnder( "round-" + games, "round-" + (games*2) + '-' + (i+1));

          drawTeam( { cx: gameCenterX, cy: gameCenterY, r: 2, col: color, label: labelPrefix + ' ' + (i+1), parent: groupRoundMatch});

          // draw two teams
          for ( let j = 0; j < 2; j++) {
            let r2 = teamRadius + 5,
                a2 = ( Math.PI * 2 / 2 * j ) + a + Math.PI / 2,
                gameX = gameCenterX + (r2 * Math.cos(a2)),
                gameY = gameCenterY + (r2 * Math.sin(a2));
            
            drawTeam( { cx: gameX, cy: gameY, r: teamRadius, col: color, label: labelPrefix + ' ' + (i+1) + '/' + (j+1), parent: groupRoundMatch});
          }
        }  
      }

      /*
      
        Generate all images, encapsulated within a pattern.

          <pattern id="flag-be" x="0%" y="10%" width="100%" height="80%" viewBox="1 1320 30 16">
            <image x="0" y="0" width="32" height="7936" xlink:href="./flags32.png"></image>
          </pattern>
      */
      let tableBody = document.getElementById("tooltip-tbody");
      console.log( tableBody);

      for ( let i = 0; i < teams.length; i++) {
        let team = teams[i];
        if (team.offset > 0) {

          // console.log( 'team w offset', team.name);
          let defs = document.getElementById("wk-defs");
                
          let pattern = document.createElementNS( svgns, "pattern");
          pattern.setAttribute( "id", "flag-" + team.shortName);
          pattern.setAttribute( "x", "0%");
          pattern.setAttribute( "y", "10%");
          pattern.setAttribute( "width", "100%");
          pattern.setAttribute( "height", "80%");
          pattern.setAttribute( "viewBox", "1 " + ( team.offset + 8) + " 30 16");

          let image = document.createElementNS( svgns, "image");
          image.setAttribute( "href", "./flags32.png");
          image.setAttribute( "x", 0);
          image.setAttribute( "y", 0);
          image.setAttribute( "width", 32);
          image.setAttribute( "heigth", 7936);
          

          defs.appendChild(pattern);
          pattern.appendChild(image);

        }

        let row = tableBody.insertRow();
        let cell0 = row.insertCell(0);
        cell0.innerHTML = team.name;
        let cell1 = row.insertCell(1);
        cell1.innerHTML = team.points || 0;
        let cell2 = row.insertCell(2);
        cell2.innerHTML = team.games || 0;
        
      }
      
      
      let group1 = createGroupUnder( "id-games", "round-all");
      
      let teamNr = 0;
      // 8 poules, 4 teams in a poule
      for ( let i = 0; i < gPoules; i++) {

        let factor = i%2 == 0 ? 1 : -1;  // wordt 1 voor de even poules, - 1 for de oneven poules

        let r = center,
            a = ( Math.PI * 2 / gPoules * i ) + Math.PI / gPoules + ( Math.PI / ( gPoules * 2) * factor),
            pouleCenterX = center + (r * Math.cos(a)),
            pouleCenterY = center + (r * Math.sin(a));

        let groupPoule = createGroupUnder( "round-all", "poule-" + (i+1));
        groupPoule.setAttribute( "onmousemove", "showTooltip(evt, " + (i+1) + ");");
        groupPoule.setAttribute( "onmouseout", "hideTooltip();");

        //console.log( i, pouleCenterX, pouleCenterY);
        drawTeam( { cx: pouleCenterX, cy: pouleCenterY, r: 2, col: 'yellow', label: 'Poule ' + (i+1), parent: groupPoule, idSuffix: 'mid'});

        for ( let j = 0; j < gTeamsInPoule; j++) {
          let r2 = 35,  // beweegt mee met de 800
              a2 = ( Math.PI * 2 / gTeamsInPoule * j) + a,
              pouleTeamX = pouleCenterX + (r2 * Math.cos(a2)),
              pouleTeamY = pouleCenterY + (r2 * Math.sin(a2));
          
          drawTeam( { cx: pouleTeamX, cy: pouleTeamY, r: 20, col: 'yellow', teamNr: teamNr++, parent: groupPoule});
        }
      }

      

      // round of 16: 8 wedstrijden
      drawRound( 8, 320, 'lightgreen', 'r16', 25, Math.PI / 8);

      // quarter-finals: 4 games
      drawRound( 4, 230, 'steelblue', 'quarter', 30);

      // half
      drawRound( 2, 150, 'yellow', 'half', 35, Math.PI / 4 * 1);

      drawRound( 1, 0, 'red', 'final', 40, - Math.PI / 4);

      // world champion
      //drawTeam( { cx: 400, cy: 400, label: 'Belgique!!', col: 'gold'});

    </script>

  </body>
</html>